/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  LibMultiSig,
  LibMultiSigInterface,
} from "../../cryptography/LibMultiSig";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
        ],
        internalType: "struct LibMultiSig.DomainSeparator",
        name: "_domainSeparator",
        type: "tuple",
      },
    ],
    name: "domainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawableInfo",
        name: "_info",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "_domainSeparator",
        type: "bytes32",
      },
    ],
    name: "hashData",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawableInfo",
        name: "_info",
        type: "tuple",
      },
    ],
    name: "hashStruct",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6106f961004e600b8282823980515f1a607314610042577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004a575f3560e01c80633c4db2781461004e57806349d3ad171461007e578063cf65c25f146100ae575b5f80fd5b61006860048036038101906100639190610281565b6100de565b60405161007591906102ce565b60405180910390f35b61009860048036038101906100939190610565565b6100f9565b6040516100a591906102ce565b60405180910390f35b6100c860048036038101906100c391906105ac565b61016d565b6040516100d591906102ce565b60405180910390f35b5f6100f1826100ec8561016d565b6101db565b905092915050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f825f01518051906020012083602001518051906020012084604001518560600151604051602001610150959493929190610604565b604051602081830303815290604052805190602001209050919050565b5f7f989545487cc7992bf1d627cac47a9849017751baf4681ec7b71fb32d4bde442f825f01358360200160208101906101a69190610655565b84604001356040516020016101be9493929190610680565b604051602081830303815290604052805190602001209050919050565b5f6040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f606082840312156102455761024461022c565b5b81905092915050565b5f819050919050565b6102608161024e565b811461026a575f80fd5b50565b5f8135905061027b81610257565b92915050565b5f806080838503121561029757610296610224565b5b5f6102a485828601610230565b92505060606102b58582860161026d565b9150509250929050565b6102c88161024e565b82525050565b5f6020820190506102e15f8301846102bf565b92915050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610331826102eb565b810181811067ffffffffffffffff821117156103505761034f6102fb565b5b80604052505050565b5f61036261021b565b905061036e8282610328565b919050565b5f80fd5b5f80fd5b5f80fd5b5f67ffffffffffffffff821115610399576103986102fb565b5b6103a2826102eb565b9050602081019050919050565b828183375f83830152505050565b5f6103cf6103ca8461037f565b610359565b9050828152602081018484840111156103eb576103ea61037b565b5b6103f68482856103af565b509392505050565b5f82601f83011261041257610411610377565b5b81356104228482602086016103bd565b91505092915050565b5f819050919050565b61043d8161042b565b8114610447575f80fd5b50565b5f8135905061045881610434565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104878261045e565b9050919050565b6104978161047d565b81146104a1575f80fd5b50565b5f813590506104b28161048e565b92915050565b5f608082840312156104cd576104cc6102e7565b5b6104d76080610359565b90505f82013567ffffffffffffffff8111156104f6576104f5610373565b5b610502848285016103fe565b5f83015250602082013567ffffffffffffffff81111561052557610524610373565b5b610531848285016103fe565b60208301525060406105458482850161044a565b6040830152506060610559848285016104a4565b60608301525092915050565b5f6020828403121561057a57610579610224565b5b5f82013567ffffffffffffffff81111561059757610596610228565b5b6105a3848285016104b8565b91505092915050565b5f606082840312156105c1576105c0610224565b5b5f6105ce84828501610230565b91505092915050565b6105e08161024e565b82525050565b6105ef8161042b565b82525050565b6105fe8161047d565b82525050565b5f60a0820190506106175f8301886105d7565b61062460208301876105d7565b61063160408301866105d7565b61063e60608301856105e6565b61064b60808301846105f5565b9695505050505050565b5f6020828403121561066a57610669610224565b5b5f610677848285016104a4565b91505092915050565b5f6080820190506106935f8301876105d7565b6106a060208301866105e6565b6106ad60408301856105f5565b6106ba60608301846105e6565b9594505050505056fea264697066735822122059e9dc6c677bd476b3620a3ddc1d8b6a1aff4e2421fd80c89a605e2bc503f07364736f6c63430008140033";

type LibMultiSigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibMultiSigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LibMultiSig__factory extends ContractFactory {
  constructor(...args: LibMultiSigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LibMultiSig & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LibMultiSig__factory {
    return super.connect(runner) as LibMultiSig__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibMultiSigInterface {
    return new Interface(_abi) as LibMultiSigInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LibMultiSig {
    return new Contract(address, _abi, runner) as unknown as LibMultiSig;
  }
}
