/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { MultiSig, MultiSigInterface } from "../MultiSig";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_version",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "_signers",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FailedTransfer",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientSignatureCount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignerStatus",
    type: "error",
  },
  {
    inputs: [],
    name: "UnauthorizedCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "UnauthorizedSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "checkSigner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "grantSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "revokeSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "signers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "submitSignoff",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "threshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawableInfo",
        name: "_info",
        type: "tuple",
      },
      {
        internalType: "bytes[]",
        name: "_signatures",
        type: "bytes[]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0604052600160055534801562000015575f80fd5b5060405162001ddf38038062001ddf83398181016040528101906200003b9190620004dc565b82828260015f819055503073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505f5b8151811015620000c957620000b38282815181106200009f576200009e62000592565b5b6020026020010151620001b460201b60201c565b8080620000c090620005f5565b9150506200007b565b505060405180608001604052808381526020018281526020014681526020013073ffffffffffffffffffffffffffffffffffffffff1681525073__$e6b9d745ef5550fe9de12a27615117b913$$e6b9d745ef5550fe9de12a27615117b913$__6325a2556c857f000000000000000000000000000000000000000000000000000000000000000086866040518563ffffffff1660e01b815260040161072d9493929190611065565b5f6040518083038186803b158015610743575f80fd5b505af4925050508015610754575060015b6107ed573d805f8114610782576040519150601f19603f3d011682016040523d82523d5f602084013e610787565b606091505b506317eebd0d60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916816107b990611107565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146107e7576107e681610a42565b5b506107ee565b5b60065f81546107fc9061119a565b9190508190555050505050565b5f81602001602081019061081d9190610c15565b73ffffffffffffffffffffffffffffffffffffffff16825f01356040516108439061120e565b5f6040518083038185875af1925050503d805f811461087d576040519150601f19603f3d011682016040523d82523d5f602084013e610882565b606091505b50509050806108bd576040517fbfa871c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60015f81905550565b600160028111156108de576108dd610db0565b5b60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16600281111561093a57610939610db0565b5b14610971576040517fb2e91fb200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6002805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908360028111156109d3576109d2610db0565b5b021790555050565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690836002811115610a3a57610a39610db0565b5b021790555050565b5f815190505f82610a5290611236565b9050805f52815ffd5b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610a92578082015181840152602081019050610a77565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610ab782610a5b565b610ac18185610a65565b9350610ad1818560208601610a75565b610ada81610a9d565b840191505092915050565b5f6020820190508181035f830152610afd8184610aad565b905092915050565b5f80fd5b5f80fd5b5f819050919050565b610b1f81610b0d565b8114610b29575f80fd5b50565b5f81359050610b3a81610b16565b92915050565b5f60208284031215610b5557610b54610b05565b5b5f610b6284828501610b2c565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b9482610b6b565b9050919050565b610ba481610b8a565b82525050565b5f602082019050610bbd5f830184610b9b565b92915050565b610bcc81610b0d565b82525050565b5f602082019050610be55f830184610bc3565b92915050565b610bf481610b8a565b8114610bfe575f80fd5b50565b5f81359050610c0f81610beb565b92915050565b5f60208284031215610c2a57610c29610b05565b5b5f610c3784828501610c01565b91505092915050565b5f80fd5b5f60608284031215610c5957610c58610c40565b5b81905092915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112610c8357610c82610c62565b5b8235905067ffffffffffffffff811115610ca057610c9f610c66565b5b602083019150836020820283011115610cbc57610cbb610c6a565b5b9250929050565b5f805f60808486031215610cda57610cd9610b05565b5b5f610ce786828701610c44565b935050606084013567ffffffffffffffff811115610d0857610d07610b09565b5b610d1486828701610c6e565b92509250509250925092565b5f8115159050919050565b610d3481610d20565b82525050565b5f602082019050610d4d5f830184610d2b565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610d9757607f821691505b602082108103610daa57610da9610d53565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610e11601f83610a65565b9150610e1c82610ddd565b602082019050919050565b5f6020820190508181035f830152610e3e81610e05565b9050919050565b5f610e536020840184610b2c565b905092915050565b610e6481610b0d565b82525050565b5f610e786020840184610c01565b905092915050565b610e8981610b8a565b82525050565b60608201610e9f5f830183610e45565b610eab5f850182610e5b565b50610eb96020830183610e6a565b610ec66020850182610e80565b50610ed46040830183610e45565b610ee16040850182610e5b565b50505050565b5f819050919050565b610ef981610ee7565b82525050565b5f82825260208201905092915050565b5f819050919050565b5f82825260208201905092915050565b828183375f83830152505050565b5f610f418385610f18565b9350610f4e838584610f28565b610f5783610a9d565b840190509392505050565b5f610f6e848484610f36565b90509392505050565b5f80fd5b5f80fd5b5f80fd5b5f8083356001602003843603038112610f9f57610f9e610f7f565b5b83810192508235915060208301925067ffffffffffffffff821115610fc757610fc6610f77565b5b600182023603831315610fdd57610fdc610f7b565b5b509250929050565b5f602082019050919050565b5f610ffc8385610eff565b93508360208402850161100e84610f0f565b805f5b878110156110535784840389526110288284610f83565b611033868284610f62565b955061103e84610fe5565b935060208b019a505050600181019050611011565b50829750879450505050509392505050565b5f60a0820190506110785f830187610e8f565b6110856060830186610ef0565b8181036080830152611098818486610ff1565b905095945050505050565b5f81519050919050565b5f819050602082019050919050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b5f6110f282516110bc565b80915050919050565b5f82821b905092915050565b5f611111826110a3565b8261111b846110ad565b9050611126816110e7565b92506004821015611166576111617fffffffff00000000000000000000000000000000000000000000000000000000836004036008026110fb565b831692505b5050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111a482610b0d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036111d6576111d561116d565b5b600182019050919050565b5f81905092915050565b50565b5f6111f95f836111e1565b9150611204826111eb565b5f82019050919050565b5f611218826111ee565b9150819050919050565b5f61122d8251610ee7565b80915050919050565b5f611240826110a3565b8261124a846110ad565b905061125581611222565b92506020821015611295576112907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff836020036008026110fb565b831692505b505091905056fea2646970667358221220af3bc5751f21050fc31d787221e6ad03cd4b0c70bb4bdb5bee9a067084582c7c64736f6c63430008140033";

type MultiSigConstructorParams =
  | [linkLibraryAddresses: MultiSigLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiSigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class MultiSig__factory extends ContractFactory {
  constructor(...args: MultiSigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, MultiSig__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: MultiSigLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e6b9d745ef5550fe9de12a27615117b913\\$__", "g"),
      linkLibraryAddresses["src/LibMultiSig.sol:LibMultiSig"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _name: string,
    _version: string,
    _signers: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _version,
      _signers,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _version: string,
    _signers: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_name, _version, _signers, overrides || {}) as Promise<
      MultiSig & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MultiSig__factory {
    return super.connect(runner) as MultiSig__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiSigInterface {
    return new Interface(_abi) as MultiSigInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MultiSig {
    return new Contract(address, _abi, runner) as unknown as MultiSig;
  }
}

export interface MultiSigLibraryAddresses {
  ["src/LibMultiSig.sol:LibMultiSig"]: string;
}
