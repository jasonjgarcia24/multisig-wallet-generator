/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { MultiSig, MultiSigInterface } from "../MultiSig";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_signers",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FailedTransfer",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientSignatureCount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignatureNonce",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "UnauthorizedSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "__signatureNonces",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawableInfo",
        name: "_info",
        type: "tuple",
      },
      {
        internalType: "bytes[]",
        name: "_signatures",
        type: "bytes[]",
      },
    ],
    name: "_verifySignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    name: "checkNonce",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "checkSigner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "grantSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "revokeSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "signers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "threshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawableInfo",
        name: "_info",
        type: "tuple",
      },
      {
        internalType: "bytes[]",
        name: "_signatures",
        type: "bytes[]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c060405234801562000010575f80fd5b506040516200218f3803806200218f833981810160405281019062000036919062000501565b83838260015f819055503073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050600180819055505f5b8151811015620000cb57620000b5828281518110620000a157620000a0620005cd565b5b6020026020010151620001be60201b60201c565b8080620000c29062000627565b9150506200007d565b505060405180608001604052808381526020018281526020014681526020013073ffffffffffffffffffffffffffffffffffffffff1681525073__$5d8889f87a0ca5db22f47b5ebe396e9f96$__6349d3ad1790916040518263ffffffff1660e01b81526004016200013e91906200075e565b602060405180830381865af41580156200015a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620001809190620007b8565b60a08181525050505083600490816200019a919062000a0c565b508260059081620001ac919062000a0c565b50816006819055505050505062000af0565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254179250508190555050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6200026d8262000225565b810181811067ffffffffffffffff821117156200028f576200028e62000235565b5b80604052505050565b5f620002a36200020c565b9050620002b1828262000262565b919050565b5f67ffffffffffffffff821115620002d357620002d262000235565b5b620002de8262000225565b9050602081019050919050565b5f5b838110156200030a578082015181840152602081019050620002ed565b5f8484015250505050565b5f6200032b6200032584620002b6565b62000298565b9050828152602081018484840111156200034a576200034962000221565b5b62000357848285620002eb565b509392505050565b5f82601f8301126200037657620003756200021d565b5b81516200038884826020860162000315565b91505092915050565b5f819050919050565b620003a58162000391565b8114620003b0575f80fd5b50565b5f81519050620003c3816200039a565b92915050565b5f67ffffffffffffffff821115620003e657620003e562000235565b5b602082029050602081019050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200042682620003fb565b9050919050565b62000438816200041a565b811462000443575f80fd5b50565b5f8151905062000456816200042d565b92915050565b5f620004726200046c84620003c9565b62000298565b90508083825260208201905060208402830185811115620004985762000497620003f7565b5b835b81811015620004c55780620004b0888262000446565b8452602084019350506020810190506200049a565b5050509392505050565b5f82601f830112620004e657620004e56200021d565b5b8151620004f88482602086016200045c565b91505092915050565b5f805f80608085870312156200051c576200051b62000215565b5b5f85015167ffffffffffffffff8111156200053c576200053b62000219565b5b6200054a878288016200035f565b945050602085015167ffffffffffffffff8111156200056e576200056d62000219565b5b6200057c878288016200035f565b93505060406200058f87828801620003b3565b925050606085015167ffffffffffffffff811115620005b357620005b262000219565b5b620005c187828801620004cf565b91505092959194509250565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f620006338262000391565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620006685762000667620005fa565b5b600182019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f620006998262000673565b620006a581856200067d565b9350620006b7818560208601620002eb565b620006c28162000225565b840191505092915050565b620006d88162000391565b82525050565b620006e9816200041a565b82525050565b5f608083015f8301518482035f8601526200070b82826200068d565b915050602083015184820360208601526200072782826200068d565b91505060408301516200073e6040860182620006cd565b506060830151620007536060860182620006de565b508091505092915050565b5f6020820190508181035f830152620007788184620006ef565b905092915050565b5f819050919050565b620007948162000780565b81146200079f575f80fd5b50565b5f81519050620007b28162000789565b92915050565b5f60208284031215620007d057620007cf62000215565b5b5f620007df84828501620007a2565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200082d57607f821691505b602082108103620008435762000842620007e8565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620008a77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200086a565b620008b386836200086a565b95508019841693508086168417925050509392505050565b5f819050919050565b5f620008f4620008ee620008e88462000391565b620008cb565b62000391565b9050919050565b5f819050919050565b6200090f83620008d4565b620009276200091e82620008fb565b84845462000876565b825550505050565b5f90565b6200093d6200092f565b6200094a81848462000904565b505050565b5b818110156200097157620009655f8262000933565b60018101905062000950565b5050565b601f821115620009c0576200098a8162000849565b62000995846200085b565b81016020851015620009a5578190505b620009bd620009b4856200085b565b8301826200094f565b50505b505050565b5f82821c905092915050565b5f620009e25f1984600802620009c5565b1980831691505092915050565b5f620009fc8383620009d1565b9150826002028217905092915050565b62000a178262000673565b67ffffffffffffffff81111562000a335762000a3262000235565b5b62000a3f825462000815565b62000a4c82828562000975565b5f60209050601f83116001811462000a82575f841562000a6d578287015190505b62000a798582620009ef565b86555062000ae8565b601f19841662000a928662000849565b5f5b8281101562000abb5784890151825560018201915060208501945060208101905062000a94565b8683101562000adb578489015162000ad7601f891682620009d1565b8355505b6001600288020188555050505b505050505050565b60805160a05161168062000b0f5f395f61042701525f50506116805ff3fe6080604052600436106100aa575f3560e01c80637404d6fa116100635780637404d6fa146101bf5780637f63ca37146101e7578063ae73462914610223578063affed0e01461025f578063c34b44a014610289578063d06f71d6146102b1576100b1565b806306fdde03146100b55780632079fb9a146100df578063359135341461011b57806342cde4e81461014357806354fd4d501461016d57806363c724f714610197576100b1565b366100b157005b5f80fd5b3480156100c0575f80fd5b506100c96102ed565b6040516100d69190610da2565b60405180910390f35b3480156100ea575f80fd5b5061010560048036038101906101009190610e06565b61037d565b6040516101129190610e70565b60405180910390f35b348015610126575f80fd5b50610141600480360381019061013c9190610f0c565b6103b8565b005b34801561014e575f80fd5b50610157610562565b6040516101649190610f78565b60405180910390f35b348015610178575f80fd5b50610181610568565b60405161018e9190610da2565b60405180910390f35b3480156101a2575f80fd5b506101bd60048036038101906101b89190610fbb565b6105f8565b005b3480156101ca575f80fd5b506101e560048036038101906101e09190610f0c565b61064e565b005b3480156101f2575f80fd5b5061020d60048036038101906102089190610fbb565b610677565b60405161021a9190611000565b60405180910390f35b34801561022e575f80fd5b5061024960048036038101906102449190611019565b6106c3565b6040516102569190611000565b60405180910390f35b34801561026a575f80fd5b5061027361075d565b6040516102809190610f78565b60405180910390f35b348015610294575f80fd5b506102af60048036038101906102aa9190610fbb565b610763565b005b3480156102bc575f80fd5b506102d760048036038101906102d29190610fbb565b6107b9565b6040516102e49190610f78565b60405180910390f35b6060600480546102fc90611084565b80601f016020809104026020016040519081016040528092919081815260200182805461032890611084565b80156103735780601f1061034a57610100808354040283529160200191610373565b820191905f5260205f20905b81548152906001019060200180831161035657829003601f168201915b5050505050905090565b6002818154811061038c575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6006548282905010156103f7576040517fc1fb4bf700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f838036038101906104099190611191565b73__$5d8889f87a0ca5db22f47b5ebe396e9f96$__633c4db27890917f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401610463929190611232565b602060405180830381865af415801561047e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104a29190611283565b90505f5b83839050811015610543575f8484838181106104c5576104c46112ae565b5b90506020028101906104d791906112e7565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505090505f61052684836107ce565b90506105368188604001356107f3565b82600101925050506104a6565b506001805f8282546105559190611376565b9250508190555050505050565b60065481565b60606005805461057790611084565b80601f01602080910402602001604051908101604052809291908181526020018280546105a390611084565b80156105ee5780601f106105c5576101008083540402835291602001916105ee565b820191905f5260205f20905b8154815290600101906020018083116105d157829003601f168201915b5050505050905090565b61060133610677565b61064257336040517fe74c68bb0000000000000000000000000000000000000000000000000000000081526004016106399190610e70565b60405180910390fd5b61064b8161080b565b50565b610656610859565b6106618383836103b8565b61066a836108a6565b61067261095e565b505050565b5f600160ff60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205416149050919050565b5f7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821115801561075557508160087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205416901c105b905092915050565b60015481565b61076c33610677565b6107ad57336040517fe74c68bb0000000000000000000000000000000000000000000000000000000081526004016107a49190610e70565b60405180910390fd5b6107b681610967565b50565b6003602052805f5260405f205f915090505481565b5f805f6107db85856109b4565b915091506107e881610a00565b819250505092915050565b6107fd8282610b65565b6108078282610bf3565b5050565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254179250508190555050565b60025f540361089d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610894906113f3565b60405180910390fd5b60025f81905550565b5f8160200160208101906108ba9190610fbb565b73ffffffffffffffffffffffffffffffffffffffff16825f01356040516108e09061143e565b5f6040518083038185875af1925050503d805f811461091a576040519150601f19603f3d011682016040523d82523d5f602084013e61091f565b606091505b505090508061095a576040517fbfa871c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60015f81905550565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254169250508190555050565b5f8060418351036109f1575f805f602086015192506040860151915060608601515f1a90506109e587828585610c40565b945094505050506109f9565b5f6002915091505b9250929050565b5f6004811115610a1357610a12611452565b5b816004811115610a2657610a25611452565b5b0315610b625760016004811115610a4057610a3f611452565b5b816004811115610a5357610a52611452565b5b03610a93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8a906114c9565b60405180910390fd5b60026004811115610aa757610aa6611452565b5b816004811115610aba57610ab9611452565b5b03610afa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af190611531565b60405180910390fd5b60036004811115610b0e57610b0d611452565b5b816004811115610b2157610b20611452565b5b03610b61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b58906115bf565b60405180910390fd5b5b50565b610b6f82826106c3565b610ba5576040517fc4689a5400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bae82610677565b610bef57816040517fe74c68bb000000000000000000000000000000000000000000000000000000008152600401610be69190610e70565b60405180910390fd5b5050565b6001600882901b1760035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b5f807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0835f1c1115610c78575f600391509150610d0f565b5f6001878787876040515f8152602001604052604051610c9b9493929190611607565b6020604051602081039080840390855afa158015610cbb573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d07575f60019250925050610d0f565b805f92509250505b94509492505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610d4f578082015181840152602081019050610d34565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610d7482610d18565b610d7e8185610d22565b9350610d8e818560208601610d32565b610d9781610d5a565b840191505092915050565b5f6020820190508181035f830152610dba8184610d6a565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b610de581610dd3565b8114610def575f80fd5b50565b5f81359050610e0081610ddc565b92915050565b5f60208284031215610e1b57610e1a610dcb565b5b5f610e2884828501610df2565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610e5a82610e31565b9050919050565b610e6a81610e50565b82525050565b5f602082019050610e835f830184610e61565b92915050565b5f80fd5b5f60608284031215610ea257610ea1610e89565b5b81905092915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112610ecc57610ecb610eab565b5b8235905067ffffffffffffffff811115610ee957610ee8610eaf565b5b602083019150836020820283011115610f0557610f04610eb3565b5b9250929050565b5f805f60808486031215610f2357610f22610dcb565b5b5f610f3086828701610e8d565b935050606084013567ffffffffffffffff811115610f5157610f50610dcf565b5b610f5d86828701610eb7565b92509250509250925092565b610f7281610dd3565b82525050565b5f602082019050610f8b5f830184610f69565b92915050565b610f9a81610e50565b8114610fa4575f80fd5b50565b5f81359050610fb581610f91565b92915050565b5f60208284031215610fd057610fcf610dcb565b5b5f610fdd84828501610fa7565b91505092915050565b5f8115159050919050565b610ffa81610fe6565b82525050565b5f6020820190506110135f830184610ff1565b92915050565b5f806040838503121561102f5761102e610dcb565b5b5f61103c85828601610fa7565b925050602061104d85828601610df2565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061109b57607f821691505b6020821081036110ae576110ad611057565b5b50919050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6110ee82610d5a565b810181811067ffffffffffffffff8211171561110d5761110c6110b8565b5b80604052505050565b5f61111f610dc2565b905061112b82826110e5565b919050565b5f60608284031215611145576111446110b4565b5b61114f6060611116565b90505f61115e84828501610df2565b5f83015250602061117184828501610fa7565b602083015250604061118584828501610df2565b60408301525092915050565b5f606082840312156111a6576111a5610dcb565b5b5f6111b384828501611130565b91505092915050565b6111c581610dd3565b82525050565b6111d481610e50565b82525050565b606082015f8201516111ee5f8501826111bc565b50602082015161120160208501826111cb565b50604082015161121460408501826111bc565b50505050565b5f819050919050565b61122c8161121a565b82525050565b5f6080820190506112455f8301856111da565b6112526060830184611223565b9392505050565b6112628161121a565b811461126c575f80fd5b50565b5f8151905061127d81611259565b92915050565b5f6020828403121561129857611297610dcb565b5b5f6112a58482850161126f565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f80fd5b5f80fd5b5f80fd5b5f8083356001602003843603038112611303576113026112db565b5b80840192508235915067ffffffffffffffff821115611325576113246112df565b5b602083019250600182023603831315611341576113406112e3565b5b509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61138082610dd3565b915061138b83610dd3565b92508282019050808211156113a3576113a2611349565b5b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6113dd601f83610d22565b91506113e8826113a9565b602082019050919050565b5f6020820190508181035f83015261140a816113d1565b9050919050565b5f81905092915050565b50565b5f6114295f83611411565b91506114348261141b565b5f82019050919050565b5f6114488261141e565b9150819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b7f45434453413a20696e76616c6964207369676e617475726500000000000000005f82015250565b5f6114b3601883610d22565b91506114be8261147f565b602082019050919050565b5f6020820190508181035f8301526114e0816114a7565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e677468005f82015250565b5f61151b601f83610d22565b9150611526826114e7565b602082019050919050565b5f6020820190508181035f8301526115488161150f565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c5f8201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b5f6115a9602283610d22565b91506115b48261154f565b604082019050919050565b5f6020820190508181035f8301526115d68161159d565b9050919050565b6115e68161121a565b82525050565b5f60ff82169050919050565b611601816115ec565b82525050565b5f60808201905061161a5f8301876115dd565b61162760208301866115f8565b61163460408301856115dd565b61164160608301846115dd565b9594505050505056fea2646970667358221220810ba0c3f2b579edf0300e5133386f6a9f9bc67355e8ce33c704e95f93b8561564736f6c63430008140033";

type MultiSigConstructorParams =
  | [linkLibraryAddresses: MultiSigLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiSigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class MultiSig__factory extends ContractFactory {
  constructor(...args: MultiSigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, MultiSig__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: MultiSigLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$5d8889f87a0ca5db22f47b5ebe396e9f96\\$__", "g"),
      linkLibraryAddresses["src/cryptography/LibMultiSig.sol:LibMultiSig"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _name: string,
    _version: string,
    _threshold: BigNumberish,
    _signers: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _version,
      _threshold,
      _signers,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _version: string,
    _threshold: BigNumberish,
    _signers: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _version,
      _threshold,
      _signers,
      overrides || {}
    ) as Promise<
      MultiSig & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MultiSig__factory {
    return super.connect(runner) as MultiSig__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiSigInterface {
    return new Interface(_abi) as MultiSigInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MultiSig {
    return new Contract(address, _abi, runner) as unknown as MultiSig;
  }
}

export interface MultiSigLibraryAddresses {
  ["src/cryptography/LibMultiSig.sol:LibMultiSig"]: string;
}
